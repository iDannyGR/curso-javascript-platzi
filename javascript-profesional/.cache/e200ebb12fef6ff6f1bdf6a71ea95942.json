{"dependencies":[{"name":"C:\\xampp\\htdocs\\curso-javascript-platzi\\javascript-profesional\\package.json","includedInParent":true,"mtime":1635536718828}],"generated":{"html":"<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Promesas</title>\r\n</head>\r\n<body>\r\n    <a href=\"/ejercicios/\">Go back</a>\r\n    <p><em>abre la consola</em></p>\r\n\r\n    <ul>\r\n        <li><button id=\"sequence\">Get top movie in Sequence</button></li>\r\n        <li><button id=\"parallel\">Get top movie in paralell</button></li>\r\n        <li><button id=\"fastest\">Get fastest top movie</button></li>\r\n    </ul>\r\n    <ul id=\"movies\"></ul>\r\n    <script>\r\n         // Ejemplo: renderMovies([{ title: \"Spider-Man\", release_date: \"2019-06-30\", poster_path: \"/rjbNpRMoVvqHmhmksbokcyCr7wn.jpg\" }])\r\n      // Traducir las funciones de usar thens a usar async/await\r\n      // Crear funci贸n para que no nos gastemos la cantidad de requests demasiado rapido\r\n      // Crear funci贸n donde hacemos requests secuenciales\r\n      // Crear funci贸n donde hacemos requests en paralelo\r\n      // Crear funci贸n donde obtenemos el primer request que llegue\r\n\r\n      // The Movie Database API: https://developers.themoviedb.org/3/getting-started/introduction\r\n      const apiKey = 'b89fc45c2067cbd33560270639722eae';\r\n\r\nasync function getMovie(id) {\r\n  const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`;\r\n  const response = await fetch(url);\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nasync function getPopularMovies() {\r\n  const url = `https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=${apiKey}`;\r\n  const response = await fetch(url);\r\n  const data = await response.json();\r\n  return data.results;\r\n}\r\n\r\nasync function getTopMoviesIds(n = 3) {\r\n  // return getPopularMovies().then(popularMovies =>\r\n  //   popularMovies.slice(0, n).map(movie => movie.id)\r\n  // );\r\n  // try {\r\n  //   const popularMovies = await getPopularMovies();\r\n  // } catch (error) {\r\n  //   console.log(error.message)\r\n  // }\r\n\r\n  const popularMovies = await getPopularMovies();\r\n  const ids = popularMovies.slice(0, n).map(movie => movie.id);\r\n  return ids;\r\n}\r\n\r\nfunction renderMovies(movies) {\r\n  const movieList = document.getElementById('movies');\r\n  movieList.innerHTML = '';\r\n\r\n  movies.forEach(movie => {\r\n    const listItem = document.createElement('li');\r\n    listItem.innerHTML = `\r\n      <img src=\"https://image.tmdb.org/t/p/w342${movie.poster_path}\" />\r\n      <h5>${movie.title}</h5>\r\n      <p>Released on <em>${movie.release_date}</em></p>\r\n      `;\r\n\r\n    movieList.appendChild(listItem);\r\n  });\r\n}\r\n\r\nasync function getTopMoviesInSequence() {\r\n  const ids = await getTopMoviesIds();\r\n  const movies = [];\r\n\r\n  for (const id of ids) {\r\n    const movie = await getMovie(id);\r\n    movies.push(movie);\r\n  }\r\n\r\n  return movies;\r\n}\r\n\r\nasync function getTopMoviesInParallel() {\r\n  const ids = await getTopMoviesIds();\r\n  const moviePromises = ids.map(id => getMovie(id));\r\n\r\n  const movies = await Promise.all(moviePromises);\r\n\r\n  return movies;\r\n}\r\n\r\nasync function getFastestTopMovie() {\r\n  const ids = await getTopMoviesIds();\r\n  const moviePromises = ids.map(id => getMovie(id));\r\n\r\n  const movie = await Promise.race(moviePromises);\r\n  return movie;\r\n}\r\n\r\ndocument.getElementById('sequence').onclick = async function() {\r\n  const movies = await getTopMoviesInSequence();\r\n  renderMovies(movies);\r\n};\r\n\r\ndocument.getElementById('parallel').onclick = async function() {\r\n  const movies = await getTopMoviesInParallel();\r\n  renderMovies(movies);\r\n};\r\n\r\ndocument.getElementById('fastest').onclick = async function() {\r\n  const movie = await getFastestTopMovie();\r\n  renderMovies([movie]);\r\n};\r\n    </script>\r\n</body>\r\n</html>"},"hash":"9635ca0576305343c79fab93f00b4c63","cacheData":{},"id":8}